--------------------------------------------------------
-- mcc V1.0.0926 - Custom microcode compiler (c)2020-... 
--    https://github.com/zpekic/MicroCodeCompiler
--------------------------------------------------------
-- Auto-generated file, do not modify. To customize, create 'mapper_template.vhd' file in mcc.exe folder
-- Supported placeholders:  [SIZES], [NAME], [TYPE], [INSTANCE], [SIGNAL], [MEMORY].
--------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.all;
--use IEEE.numeric_std.all;

package hex2mem_map is

-- memory block size
constant MAPPER_DATA_WIDTH: 	positive := 7;
constant MAPPER_ADDRESS_WIDTH: 	positive := 8;
constant MAPPER_ADDRESS_LAST: 	positive := 255;


type h2m_mapper_memory is array(0 to 255) of std_logic_vector(6 downto 0);

signal h2m_instructionstart: std_logic_vector(6 downto 0);

--h2m_instructionstart <= h2m_mapper(to_integer(unsigned(TODO))); -- copy to file containing the control unit. TODO is typically the 'instruction_register'



constant h2m_mapper: h2m_mapper_memory := (

-- L0232@001D. .map 0;
0 => "0011101",

1 => "0000111",

2 => "0000111",

3 => "0000111",

4 => "0000111",

5 => "0000111",

6 => "0000111",

7 => "0000111",

8 => "0000111",

-- L0366@005D. .map 0x09;
9 => "1011101",

-- L0324@0044. .map 0x0A;
10 => "1000100",

11 => "0000111",

12 => "0000111",

-- L0327@0045. .map 0x0D;
13 => "1000101",

14 => "0000111",

15 => "0000111",

16 => "0000111",

17 => "0000111",

18 => "0000111",

19 => "0000111",

20 => "0000111",

21 => "0000111",

22 => "0000111",

23 => "0000111",

24 => "0000111",

25 => "0000111",

26 => "0000111",

27 => "0000111",

28 => "0000111",

29 => "0000111",

30 => "0000111",

31 => "0000111",

-- L0367@005D. .map ' ';
32 => "1011101",

33 => "0000111",

34 => "0000111",

35 => "0000111",

36 => "0000111",

37 => "0000111",

38 => "0000111",

39 => "0000111",

40 => "0000111",

41 => "0000111",

42 => "0000111",

43 => "0000111",

44 => "0000111",

45 => "0000111",

46 => "0000111",

47 => "0000111",

-- L0251@0030. .map '0';
48 => "0110000",

-- L0255@0031. .map '1';
49 => "0110001",

-- L0259@0032. .map '2';
50 => "0110010",

-- L0263@0033. .map '3';
51 => "0110011",

-- L0267@0034. .map '4';
52 => "0110100",

-- L0271@0035. .map '5';
53 => "0110101",

-- L0275@0036. .map '6';
54 => "0110110",

-- L0279@0037. .map '7';
55 => "0110111",

-- L0283@0038. .map '8';
56 => "0111000",

-- L0287@0039. .map '9';
57 => "0111001",

-- L0371@005F. .map ':';
58 => "1011111",

59 => "0000111",

60 => "0000111",

61 => "0000111",

62 => "0000111",

63 => "0000111",

64 => "0000111",

-- L0292@003A. .map 'A';
65 => "0111010",

-- L0297@003B. .map 'B';
66 => "0111011",

-- L0302@003C. .map 'C';
67 => "0111100",

-- L0307@003D. .map 'D';
68 => "0111101",

-- L0312@003E. .map 'E';
69 => "0111110",

-- L0317@003F. .map 'F';
70 => "0111111",

71 => "0000111",

72 => "0000111",

73 => "0000111",

74 => "0000111",

75 => "0000111",

76 => "0000111",

77 => "0000111",

78 => "0000111",

79 => "0000111",

80 => "0000111",

81 => "0000111",

82 => "0000111",

83 => "0000111",

84 => "0000111",

85 => "0000111",

86 => "0000111",

87 => "0000111",

88 => "0000111",

89 => "0000111",

90 => "0000111",

91 => "0000111",

92 => "0000111",

93 => "0000111",

94 => "0000111",

95 => "0000111",

96 => "0000111",

-- L0291@003A. .map 'a';
97 => "0111010",

-- L0296@003B. .map 'b';
98 => "0111011",

-- L0301@003C. .map 'c';
99 => "0111100",

-- L0306@003D. .map 'd';
100 => "0111101",

-- L0311@003E. .map 'e';
101 => "0111110",

-- L0316@003F. .map 'f';
102 => "0111111",

103 => "0000111",

104 => "0000111",

105 => "0000111",

106 => "0000111",

107 => "0000111",

108 => "0000111",

109 => "0000111",

110 => "0000111",

111 => "0000111",

112 => "0000111",

113 => "0000111",

114 => "0000111",

115 => "0000111",

116 => "0000111",

117 => "0000111",

118 => "0000111",

119 => "0000111",

120 => "0000111",

121 => "0000111",

122 => "0000111",

123 => "0000111",

124 => "0000111",

125 => "0000111",

126 => "0000111",

127 => "0000111",

128 => "0000111",

129 => "0000111",

130 => "0000111",

131 => "0000111",

132 => "0000111",

133 => "0000111",

134 => "0000111",

135 => "0000111",

136 => "0000111",

137 => "0000111",

138 => "0000111",

139 => "0000111",

140 => "0000111",

141 => "0000111",

142 => "0000111",

143 => "0000111",

144 => "0000111",

145 => "0000111",

146 => "0000111",

147 => "0000111",

148 => "0000111",

149 => "0000111",

150 => "0000111",

151 => "0000111",

152 => "0000111",

153 => "0000111",

154 => "0000111",

155 => "0000111",

156 => "0000111",

157 => "0000111",

158 => "0000111",

159 => "0000111",

160 => "0000111",

161 => "0000111",

162 => "0000111",

163 => "0000111",

164 => "0000111",

165 => "0000111",

166 => "0000111",

167 => "0000111",

168 => "0000111",

169 => "0000111",

170 => "0000111",

171 => "0000111",

172 => "0000111",

173 => "0000111",

174 => "0000111",

175 => "0000111",

176 => "0000111",

177 => "0000111",

178 => "0000111",

179 => "0000111",

180 => "0000111",

181 => "0000111",

182 => "0000111",

183 => "0000111",

184 => "0000111",

185 => "0000111",

186 => "0000111",

187 => "0000111",

188 => "0000111",

189 => "0000111",

190 => "0000111",

191 => "0000111",

192 => "0000111",

193 => "0000111",

194 => "0000111",

195 => "0000111",

196 => "0000111",

197 => "0000111",

198 => "0000111",

199 => "0000111",

200 => "0000111",

201 => "0000111",

202 => "0000111",

203 => "0000111",

204 => "0000111",

205 => "0000111",

206 => "0000111",

207 => "0000111",

208 => "0000111",

209 => "0000111",

210 => "0000111",

211 => "0000111",

212 => "0000111",

213 => "0000111",

214 => "0000111",

215 => "0000111",

216 => "0000111",

217 => "0000111",

218 => "0000111",

219 => "0000111",

220 => "0000111",

221 => "0000111",

222 => "0000111",

223 => "0000111",

224 => "0000111",

225 => "0000111",

226 => "0000111",

227 => "0000111",

228 => "0000111",

229 => "0000111",

230 => "0000111",

231 => "0000111",

232 => "0000111",

233 => "0000111",

234 => "0000111",

235 => "0000111",

236 => "0000111",

237 => "0000111",

238 => "0000111",

239 => "0000111",

240 => "0000111",

241 => "0000111",

242 => "0000111",

243 => "0000111",

244 => "0000111",

245 => "0000111",

246 => "0000111",

247 => "0000111",

248 => "0000111",

249 => "0000111",

250 => "0000111",

251 => "0000111",

252 => "0000111",

253 => "0000111",

254 => "0000111",

255 => "0000111");

end hex2mem_map;

